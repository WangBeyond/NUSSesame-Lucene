// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: luceneVector.proto

package tool;

public final class VectorListProto {
  private VectorListProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface VectorOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int64 vectorId = 1;
    /**
     * <code>required int64 vectorId = 1;</code>
     */
    boolean hasVectorId();
    /**
     * <code>required int64 vectorId = 1;</code>
     */
    long getVectorId();

    // repeated int32 value = 2;
    /**
     * <code>repeated int32 value = 2;</code>
     */
    java.util.List<java.lang.Integer> getValueList();
    /**
     * <code>repeated int32 value = 2;</code>
     */
    int getValueCount();
    /**
     * <code>repeated int32 value = 2;</code>
     */
    int getValue(int index);
  }
  /**
   * Protobuf type {@code tool.Vector}
   */
  public static final class Vector extends
      com.google.protobuf.GeneratedMessage
      implements VectorOrBuilder {
    // Use Vector.newBuilder() to construct.
    private Vector(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Vector(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Vector defaultInstance;
    public static Vector getDefaultInstance() {
      return defaultInstance;
    }

    public Vector getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Vector(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              vectorId_ = input.readInt64();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                value_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              value_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                value_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                value_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = java.util.Collections.unmodifiableList(value_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tool.VectorListProto.internal_static_tool_Vector_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tool.VectorListProto.internal_static_tool_Vector_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tool.VectorListProto.Vector.class, tool.VectorListProto.Vector.Builder.class);
    }

    public static com.google.protobuf.Parser<Vector> PARSER =
        new com.google.protobuf.AbstractParser<Vector>() {
      public Vector parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Vector(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Vector> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 vectorId = 1;
    public static final int VECTORID_FIELD_NUMBER = 1;
    private long vectorId_;
    /**
     * <code>required int64 vectorId = 1;</code>
     */
    public boolean hasVectorId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 vectorId = 1;</code>
     */
    public long getVectorId() {
      return vectorId_;
    }

    // repeated int32 value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> value_;
    /**
     * <code>repeated int32 value = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getValueList() {
      return value_;
    }
    /**
     * <code>repeated int32 value = 2;</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <code>repeated int32 value = 2;</code>
     */
    public int getValue(int index) {
      return value_.get(index);
    }

    private void initFields() {
      vectorId_ = 0L;
      value_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasVectorId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, vectorId_);
      }
      for (int i = 0; i < value_.size(); i++) {
        output.writeInt32(2, value_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, vectorId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < value_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(value_.get(i));
        }
        size += dataSize;
        size += 1 * getValueList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static tool.VectorListProto.Vector parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tool.VectorListProto.Vector parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tool.VectorListProto.Vector parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tool.VectorListProto.Vector parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tool.VectorListProto.Vector parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static tool.VectorListProto.Vector parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static tool.VectorListProto.Vector parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static tool.VectorListProto.Vector parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static tool.VectorListProto.Vector parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static tool.VectorListProto.Vector parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(tool.VectorListProto.Vector prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tool.Vector}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements tool.VectorListProto.VectorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tool.VectorListProto.internal_static_tool_Vector_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tool.VectorListProto.internal_static_tool_Vector_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tool.VectorListProto.Vector.class, tool.VectorListProto.Vector.Builder.class);
      }

      // Construct using tool.VectorListProto.Vector.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        vectorId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tool.VectorListProto.internal_static_tool_Vector_descriptor;
      }

      public tool.VectorListProto.Vector getDefaultInstanceForType() {
        return tool.VectorListProto.Vector.getDefaultInstance();
      }

      public tool.VectorListProto.Vector build() {
        tool.VectorListProto.Vector result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tool.VectorListProto.Vector buildPartial() {
        tool.VectorListProto.Vector result = new tool.VectorListProto.Vector(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.vectorId_ = vectorId_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = java.util.Collections.unmodifiableList(value_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tool.VectorListProto.Vector) {
          return mergeFrom((tool.VectorListProto.Vector)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tool.VectorListProto.Vector other) {
        if (other == tool.VectorListProto.Vector.getDefaultInstance()) return this;
        if (other.hasVectorId()) {
          setVectorId(other.getVectorId());
        }
        if (!other.value_.isEmpty()) {
          if (value_.isEmpty()) {
            value_ = other.value_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureValueIsMutable();
            value_.addAll(other.value_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasVectorId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tool.VectorListProto.Vector parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tool.VectorListProto.Vector) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 vectorId = 1;
      private long vectorId_ ;
      /**
       * <code>required int64 vectorId = 1;</code>
       */
      public boolean hasVectorId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 vectorId = 1;</code>
       */
      public long getVectorId() {
        return vectorId_;
      }
      /**
       * <code>required int64 vectorId = 1;</code>
       */
      public Builder setVectorId(long value) {
        bitField0_ |= 0x00000001;
        vectorId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 vectorId = 1;</code>
       */
      public Builder clearVectorId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        vectorId_ = 0L;
        onChanged();
        return this;
      }

      // repeated int32 value = 2;
      private java.util.List<java.lang.Integer> value_ = java.util.Collections.emptyList();
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = new java.util.ArrayList<java.lang.Integer>(value_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 value = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getValueList() {
        return java.util.Collections.unmodifiableList(value_);
      }
      /**
       * <code>repeated int32 value = 2;</code>
       */
      public int getValueCount() {
        return value_.size();
      }
      /**
       * <code>repeated int32 value = 2;</code>
       */
      public int getValue(int index) {
        return value_.get(index);
      }
      /**
       * <code>repeated int32 value = 2;</code>
       */
      public Builder setValue(
          int index, int value) {
        ensureValueIsMutable();
        value_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 value = 2;</code>
       */
      public Builder addValue(int value) {
        ensureValueIsMutable();
        value_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 value = 2;</code>
       */
      public Builder addAllValue(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureValueIsMutable();
        super.addAll(values, value_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 value = 2;</code>
       */
      public Builder clearValue() {
        value_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:tool.Vector)
    }

    static {
      defaultInstance = new Vector(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:tool.Vector)
  }

  public interface VectorListOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .tool.Vector vector = 1;
    /**
     * <code>repeated .tool.Vector vector = 1;</code>
     */
    java.util.List<tool.VectorListProto.Vector> 
        getVectorList();
    /**
     * <code>repeated .tool.Vector vector = 1;</code>
     */
    tool.VectorListProto.Vector getVector(int index);
    /**
     * <code>repeated .tool.Vector vector = 1;</code>
     */
    int getVectorCount();
    /**
     * <code>repeated .tool.Vector vector = 1;</code>
     */
    java.util.List<? extends tool.VectorListProto.VectorOrBuilder> 
        getVectorOrBuilderList();
    /**
     * <code>repeated .tool.Vector vector = 1;</code>
     */
    tool.VectorListProto.VectorOrBuilder getVectorOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code tool.VectorList}
   */
  public static final class VectorList extends
      com.google.protobuf.GeneratedMessage
      implements VectorListOrBuilder {
    // Use VectorList.newBuilder() to construct.
    private VectorList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private VectorList(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final VectorList defaultInstance;
    public static VectorList getDefaultInstance() {
      return defaultInstance;
    }

    public VectorList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private VectorList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                vector_ = new java.util.ArrayList<tool.VectorListProto.Vector>();
                mutable_bitField0_ |= 0x00000001;
              }
              vector_.add(input.readMessage(tool.VectorListProto.Vector.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          vector_ = java.util.Collections.unmodifiableList(vector_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tool.VectorListProto.internal_static_tool_VectorList_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tool.VectorListProto.internal_static_tool_VectorList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tool.VectorListProto.VectorList.class, tool.VectorListProto.VectorList.Builder.class);
    }

    public static com.google.protobuf.Parser<VectorList> PARSER =
        new com.google.protobuf.AbstractParser<VectorList>() {
      public VectorList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VectorList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<VectorList> getParserForType() {
      return PARSER;
    }

    // repeated .tool.Vector vector = 1;
    public static final int VECTOR_FIELD_NUMBER = 1;
    private java.util.List<tool.VectorListProto.Vector> vector_;
    /**
     * <code>repeated .tool.Vector vector = 1;</code>
     */
    public java.util.List<tool.VectorListProto.Vector> getVectorList() {
      return vector_;
    }
    /**
     * <code>repeated .tool.Vector vector = 1;</code>
     */
    public java.util.List<? extends tool.VectorListProto.VectorOrBuilder> 
        getVectorOrBuilderList() {
      return vector_;
    }
    /**
     * <code>repeated .tool.Vector vector = 1;</code>
     */
    public int getVectorCount() {
      return vector_.size();
    }
    /**
     * <code>repeated .tool.Vector vector = 1;</code>
     */
    public tool.VectorListProto.Vector getVector(int index) {
      return vector_.get(index);
    }
    /**
     * <code>repeated .tool.Vector vector = 1;</code>
     */
    public tool.VectorListProto.VectorOrBuilder getVectorOrBuilder(
        int index) {
      return vector_.get(index);
    }

    private void initFields() {
      vector_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getVectorCount(); i++) {
        if (!getVector(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < vector_.size(); i++) {
        output.writeMessage(1, vector_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < vector_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, vector_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static tool.VectorListProto.VectorList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tool.VectorListProto.VectorList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tool.VectorListProto.VectorList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tool.VectorListProto.VectorList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tool.VectorListProto.VectorList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static tool.VectorListProto.VectorList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static tool.VectorListProto.VectorList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static tool.VectorListProto.VectorList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static tool.VectorListProto.VectorList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static tool.VectorListProto.VectorList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(tool.VectorListProto.VectorList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tool.VectorList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements tool.VectorListProto.VectorListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tool.VectorListProto.internal_static_tool_VectorList_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tool.VectorListProto.internal_static_tool_VectorList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tool.VectorListProto.VectorList.class, tool.VectorListProto.VectorList.Builder.class);
      }

      // Construct using tool.VectorListProto.VectorList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getVectorFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (vectorBuilder_ == null) {
          vector_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          vectorBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tool.VectorListProto.internal_static_tool_VectorList_descriptor;
      }

      public tool.VectorListProto.VectorList getDefaultInstanceForType() {
        return tool.VectorListProto.VectorList.getDefaultInstance();
      }

      public tool.VectorListProto.VectorList build() {
        tool.VectorListProto.VectorList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tool.VectorListProto.VectorList buildPartial() {
        tool.VectorListProto.VectorList result = new tool.VectorListProto.VectorList(this);
        int from_bitField0_ = bitField0_;
        if (vectorBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            vector_ = java.util.Collections.unmodifiableList(vector_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.vector_ = vector_;
        } else {
          result.vector_ = vectorBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tool.VectorListProto.VectorList) {
          return mergeFrom((tool.VectorListProto.VectorList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tool.VectorListProto.VectorList other) {
        if (other == tool.VectorListProto.VectorList.getDefaultInstance()) return this;
        if (vectorBuilder_ == null) {
          if (!other.vector_.isEmpty()) {
            if (vector_.isEmpty()) {
              vector_ = other.vector_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureVectorIsMutable();
              vector_.addAll(other.vector_);
            }
            onChanged();
          }
        } else {
          if (!other.vector_.isEmpty()) {
            if (vectorBuilder_.isEmpty()) {
              vectorBuilder_.dispose();
              vectorBuilder_ = null;
              vector_ = other.vector_;
              bitField0_ = (bitField0_ & ~0x00000001);
              vectorBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getVectorFieldBuilder() : null;
            } else {
              vectorBuilder_.addAllMessages(other.vector_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getVectorCount(); i++) {
          if (!getVector(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tool.VectorListProto.VectorList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tool.VectorListProto.VectorList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .tool.Vector vector = 1;
      private java.util.List<tool.VectorListProto.Vector> vector_ =
        java.util.Collections.emptyList();
      private void ensureVectorIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          vector_ = new java.util.ArrayList<tool.VectorListProto.Vector>(vector_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          tool.VectorListProto.Vector, tool.VectorListProto.Vector.Builder, tool.VectorListProto.VectorOrBuilder> vectorBuilder_;

      /**
       * <code>repeated .tool.Vector vector = 1;</code>
       */
      public java.util.List<tool.VectorListProto.Vector> getVectorList() {
        if (vectorBuilder_ == null) {
          return java.util.Collections.unmodifiableList(vector_);
        } else {
          return vectorBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .tool.Vector vector = 1;</code>
       */
      public int getVectorCount() {
        if (vectorBuilder_ == null) {
          return vector_.size();
        } else {
          return vectorBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .tool.Vector vector = 1;</code>
       */
      public tool.VectorListProto.Vector getVector(int index) {
        if (vectorBuilder_ == null) {
          return vector_.get(index);
        } else {
          return vectorBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .tool.Vector vector = 1;</code>
       */
      public Builder setVector(
          int index, tool.VectorListProto.Vector value) {
        if (vectorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVectorIsMutable();
          vector_.set(index, value);
          onChanged();
        } else {
          vectorBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tool.Vector vector = 1;</code>
       */
      public Builder setVector(
          int index, tool.VectorListProto.Vector.Builder builderForValue) {
        if (vectorBuilder_ == null) {
          ensureVectorIsMutable();
          vector_.set(index, builderForValue.build());
          onChanged();
        } else {
          vectorBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tool.Vector vector = 1;</code>
       */
      public Builder addVector(tool.VectorListProto.Vector value) {
        if (vectorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVectorIsMutable();
          vector_.add(value);
          onChanged();
        } else {
          vectorBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .tool.Vector vector = 1;</code>
       */
      public Builder addVector(
          int index, tool.VectorListProto.Vector value) {
        if (vectorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVectorIsMutable();
          vector_.add(index, value);
          onChanged();
        } else {
          vectorBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tool.Vector vector = 1;</code>
       */
      public Builder addVector(
          tool.VectorListProto.Vector.Builder builderForValue) {
        if (vectorBuilder_ == null) {
          ensureVectorIsMutable();
          vector_.add(builderForValue.build());
          onChanged();
        } else {
          vectorBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tool.Vector vector = 1;</code>
       */
      public Builder addVector(
          int index, tool.VectorListProto.Vector.Builder builderForValue) {
        if (vectorBuilder_ == null) {
          ensureVectorIsMutable();
          vector_.add(index, builderForValue.build());
          onChanged();
        } else {
          vectorBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tool.Vector vector = 1;</code>
       */
      public Builder addAllVector(
          java.lang.Iterable<? extends tool.VectorListProto.Vector> values) {
        if (vectorBuilder_ == null) {
          ensureVectorIsMutable();
          super.addAll(values, vector_);
          onChanged();
        } else {
          vectorBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .tool.Vector vector = 1;</code>
       */
      public Builder clearVector() {
        if (vectorBuilder_ == null) {
          vector_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          vectorBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .tool.Vector vector = 1;</code>
       */
      public Builder removeVector(int index) {
        if (vectorBuilder_ == null) {
          ensureVectorIsMutable();
          vector_.remove(index);
          onChanged();
        } else {
          vectorBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .tool.Vector vector = 1;</code>
       */
      public tool.VectorListProto.Vector.Builder getVectorBuilder(
          int index) {
        return getVectorFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .tool.Vector vector = 1;</code>
       */
      public tool.VectorListProto.VectorOrBuilder getVectorOrBuilder(
          int index) {
        if (vectorBuilder_ == null) {
          return vector_.get(index);  } else {
          return vectorBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .tool.Vector vector = 1;</code>
       */
      public java.util.List<? extends tool.VectorListProto.VectorOrBuilder> 
           getVectorOrBuilderList() {
        if (vectorBuilder_ != null) {
          return vectorBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(vector_);
        }
      }
      /**
       * <code>repeated .tool.Vector vector = 1;</code>
       */
      public tool.VectorListProto.Vector.Builder addVectorBuilder() {
        return getVectorFieldBuilder().addBuilder(
            tool.VectorListProto.Vector.getDefaultInstance());
      }
      /**
       * <code>repeated .tool.Vector vector = 1;</code>
       */
      public tool.VectorListProto.Vector.Builder addVectorBuilder(
          int index) {
        return getVectorFieldBuilder().addBuilder(
            index, tool.VectorListProto.Vector.getDefaultInstance());
      }
      /**
       * <code>repeated .tool.Vector vector = 1;</code>
       */
      public java.util.List<tool.VectorListProto.Vector.Builder> 
           getVectorBuilderList() {
        return getVectorFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          tool.VectorListProto.Vector, tool.VectorListProto.Vector.Builder, tool.VectorListProto.VectorOrBuilder> 
          getVectorFieldBuilder() {
        if (vectorBuilder_ == null) {
          vectorBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              tool.VectorListProto.Vector, tool.VectorListProto.Vector.Builder, tool.VectorListProto.VectorOrBuilder>(
                  vector_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          vector_ = null;
        }
        return vectorBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:tool.VectorList)
    }

    static {
      defaultInstance = new VectorList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:tool.VectorList)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_tool_Vector_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_tool_Vector_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_tool_VectorList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_tool_VectorList_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022luceneVector.proto\022\004tool\")\n\006Vector\022\020\n\010" +
      "vectorId\030\001 \002(\003\022\r\n\005value\030\002 \003(\005\"*\n\nVectorL" +
      "ist\022\034\n\006vector\030\001 \003(\0132\014.tool.VectorB\027\n\004too" +
      "lB\017VectorListProto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_tool_Vector_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_tool_Vector_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_tool_Vector_descriptor,
              new java.lang.String[] { "VectorId", "Value", });
          internal_static_tool_VectorList_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_tool_VectorList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_tool_VectorList_descriptor,
              new java.lang.String[] { "Vector", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
